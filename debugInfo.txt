dequebuilder pushed:CLASS|$CLASS
dequebuilder pushed:test|<var>
dequebuilder pushed:{|$LB
dequebuilder pushed:CONST|$CONST
dequebuilder pushed:M|<var>
dequebuilder pushed:=|<assign>
dequebuilder pushed:8|<integer>
dequebuilder pushed:;|<semi>
dequebuilder pushed:VAR|$VAR
dequebuilder pushed:X|<var>
dequebuilder pushed:;|<semi>
dequebuilder pushed:GET|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:X|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:X|<var>
dequebuilder pushed:=|<assign>
dequebuilder pushed:X|<var>
dequebuilder pushed:/|<mop>
dequebuilder pushed:8|<integer>
dequebuilder pushed:;|<semi>
dequebuilder pushed:PUT|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:X|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:}|$RB
Popping Class:$CLASS
Popping Class2:test
Found CONST/VAR line:$CONST <var> <assign> <integer> <semi> 
Deleting from:$CONST to <semi>
Full line to erase:CONST M = 8 ; 
Found CONST/VAR line:$VAR <var> <semi> 
Deleting from:$VAR to <semi>
Full line to erase:VAR X ; 
Got front & popped:{
Found GET, popping:( X ) ;Got front & popped:X
Inside NotOperator if, pushing nonoperator into PDA:X
Entering generateQuads, popVec contains:8,/,X,
Finished generateQuads, prevOperator set:=
genQuads returned a Temp,T1 pushing into stack
going to checkAfterQuadGen
Inside >, prevOperatorNum:1, currentNum:0
topStack:T1
Building popVector for quads
Pushing to popVec:T1
Popping from stackT1
New popToken:=
Building popVector for quads
Found operator:=
Pushing to popVec:=
Popping from stack=
New popToken:X
Building popVector for quads
Pushing to popVec:X
Popping from stackX
New popToken:{
Entering generateQuads, popVec contains:T1,=,X,
Finished generateQuads, prevOperator set:{
Got front & popped:}
