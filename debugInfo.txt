dequebuilder pushed:CLASS|$CLASS
dequebuilder pushed:PGM1|<var>
dequebuilder pushed:{|$LB
dequebuilder pushed:VAR|$VAR
dequebuilder pushed:A|<var>
dequebuilder pushed:,|<comma>
dequebuilder pushed:B|<var>
dequebuilder pushed:,|<comma>
dequebuilder pushed:C|<var>
dequebuilder pushed:,|<comma>
dequebuilder pushed:D|<var>
dequebuilder pushed:,|<comma>
dequebuilder pushed:ans|<var>
dequebuilder pushed:;|<semi>
dequebuilder pushed:GET|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:A|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:GET|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:B|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:GET|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:C|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:GET|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:D|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:ans|<var>
dequebuilder pushed:=|<assign>
dequebuilder pushed:(|$LP
dequebuilder pushed:A|<var>
dequebuilder pushed:-|<addop>
dequebuilder pushed:B|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:*|<mop>
dequebuilder pushed:(|$LP
dequebuilder pushed:C|<var>
dequebuilder pushed:*|<mop>
dequebuilder pushed:D|<var>
dequebuilder pushed:-|<addop>
dequebuilder pushed:1|<integer>
dequebuilder pushed:*|<mop>
dequebuilder pushed:2|<integer>
dequebuilder pushed:)|$RP
dequebuilder pushed:+|<addop>
dequebuilder pushed:(|$LP
dequebuilder pushed:4|<integer>
dequebuilder pushed:/|<mop>
dequebuilder pushed:2|<integer>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:PUT|<var>
dequebuilder pushed:(|$LP
dequebuilder pushed:ans|<var>
dequebuilder pushed:)|$RP
dequebuilder pushed:;|<semi>
dequebuilder pushed:}|$RB
Popping Class:$CLASS
Popping Class2:PGM1
Found CONST/VAR line:$VAR <var> <comma> <var> <comma> <var> <comma> <var> <comma> <var> <semi> 
Deleting from:$VAR to <semi>
Full line to erase:VAR A , B , C , D , ans ; 
Got front & popped:{
Got front & popped:GET
Got front & popped:GET
Got front & popped:GET
Got front & popped:ans
Entering generateQuads, popVec contains:B,-,A,
Finished generateQuads, prevOperator set:(
genQuads returned a Temp,T1 pushing into stack
going to checkAfterQuadGen
LPRP Temp T:T1
LPRP LP:(
LPRP Temp prevop:=
Got front & popped:*
Entering generateQuads, popVec contains:D,*,C,
Finished generateQuads, prevOperator set:(
genQuads returned a Temp,T2 pushing into stack
going to checkAfterQuadGen
Got front & popped:1
Entering generateQuads, popVec contains:2,*,1,
Finished generateQuads, prevOperator set:-
genQuads returned a Temp,T3 pushing into stack
going to checkAfterQuadGen
Inside >, prevOperatorNum:2, currentNum:4
topStack:T3
Building popVector for quads
Pushing to popVec:T3
Popping from stackT3
New popToken:-
Building popVector for quads
Found operator:-
Pushing to popVec:-
Popping from stack-
New popToken:T2
Building popVector for quads
Pushing to popVec:T2
Popping from stackT2
New popToken:(
Entering generateQuads, popVec contains:T3,-,T2,
Finished generateQuads, prevOperator set:(
genQuads returned a Temp,T4 pushing into stack
going to checkAfterQuadGen
LPRP Temp T:T4
LPRP LP:(
LPRP Temp prevop:*
Got front & popped:+
Entering generateQuads, popVec contains:T4,*,T1,
Finished generateQuads, prevOperator set:=
genQuads returned a Temp,T5 pushing into stack
going to checkAfterQuadGen
Got front & popped:(
Entering generateQuads, popVec contains:2,/,4,
Finished generateQuads, prevOperator set:(
genQuads returned a Temp,T6 pushing into stack
going to checkAfterQuadGen
LPRP Temp T:T6
LPRP LP:(
LPRP Temp prevop:+
Got front & popped:;
Entering generateQuads, popVec contains:T6,+,T5,
Finished generateQuads, prevOperator set:=
genQuads returned a Temp,T7 pushing into stack
going to checkAfterQuadGen
Inside >, prevOperatorNum:1, currentNum:0
topStack:T7
Building popVector for quads
Pushing to popVec:T7
Popping from stackT7
New popToken:=
Building popVector for quads
Found operator:=
Pushing to popVec:=
Popping from stack=
New popToken:ans
Building popVector for quads
Pushing to popVec:ans
Popping from stackans
New popToken:{
Entering generateQuads, popVec contains:T7,=,ans,
Finished generateQuads, prevOperator set:{
Got front & popped:}
